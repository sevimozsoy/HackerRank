import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;



public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
    
        //two dimensional list 
        List<List<Integer>> arr = new ArrayList<>();

        for (int i = 0; i < 6; i++) {
            String[] arrRowTempItems = bufferedReader.readLine().replaceAll("\\s+$", "").split(" ");

            List<Integer> arrRowItems = new ArrayList<>();

            for (int j = 0; j < 6; j++) {
                int arrItem = Integer.parseInt(arrRowTempItems[j]);
                arrRowItems.add(arrItem);
            }

            arr.add(arrRowItems);
        }
        
        //min result is -63 because there are 7 elements of hourglass and -9*7 =-63
        int result = -63;
        
        //for till 4 because we are thinking on fundamental hourglass and adding on that
        for(int i = 0; i < 4; i++){
            for(int j = 0; j < 4; j++){
                int temp = arr.get(i).get(j)+ arr.get(i).get(j+1) + arr.get(i).get(j+2) + arr.get(i+1).get(j+1) + arr.get(i+2).get(j) +arr.get(i+2).get(j+1) + arr.get(i+2).get(j+2);
            
            //comparing the results 
            if(temp > result){
                result = temp;
            }else
            continue;
            }
        } 
        System.out.println(result);

        bufferedReader.close();
    }
}
